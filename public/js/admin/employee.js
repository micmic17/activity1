/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/admin/employee.js":
/*!****************************************!*\
  !*** ./resources/js/admin/employee.js ***!
  \****************************************/
/***/ (() => {

eval("window.onload = function (event) {\n  var validationField;\n  var ul;\n  $('#add_employee_modal').on('submit', function (e) {\n    e.preventDefault();\n    e.originalEvent.submitter.setAttribute(\"disabled\", true);\n    var form = $('#add_employee_modal');\n    var data = form.serialize();\n    removeValidationMessage();\n    axios({\n      method: 'post',\n      url: '/employee',\n      data: data\n    }).then(function (response) {\n      successResponse(response, form, 'Succesfully added an employee', 'add');\n    })[\"catch\"](function (error) {\n      e.originalEvent.submitter.removeAttribute(\"disabled\");\n      errorResponse(error);\n    });\n  });\n  $('[data-toggle=\"modal\"]').on('click', function (event) {\n    var id = event.currentTarget.attributes[1].value;\n    if (id == '#addEmployeeModal') validationField = document.getElementById(0);else validationField = document.getElementById(event.currentTarget.attributes[1].value);\n    ul = validationField.firstElementChild;\n    $('#update_employee_modal' + id).on('submit', function (e) {\n      e.preventDefault();\n      e.originalEvent.submitter.setAttribute(\"disabled\", true);\n      var form = $('#update_employee_modal' + id);\n      var data = form.serialize();\n      removeValidationMessage();\n      axios({\n        method: 'put',\n        url: '/employee/' + id,\n        data: data\n      }).then(function (response) {\n        successResponse(response, form, 'Succesfully updated the employee', 'update');\n      })[\"catch\"](function (error) {\n        e.originalEvent.submitter.removeAttribute(\"disabled\");\n        errorResponse(error);\n      });\n    });\n  });\n\n  var removeValidationMessage = function removeValidationMessage() {\n    if (ul.childElementCount > 0) {\n      validationField.classList.remove('alert-danger', 'alert-success');\n\n      while (ul.firstChild && !ul.firstChild.remove()) {\n        ;\n      }\n    }\n  };\n\n  var addMessage = function addMessage() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var type = arguments.length > 1 ? arguments[1] : undefined;\n    validationField.classList.remove('d-none');\n\n    if (type == 'success') {\n      validationField.classList.add('alert-success');\n\n      for (var i = 0; i < message.length; i++) {\n        var li = document.createElement('li');\n        li.textContent = message[i];\n        ul.appendChild(li);\n      }\n    } else {\n      validationField.classList.add('alert-danger');\n\n      for (var _i = 0; _i < message.length; _i++) {\n        var _li = document.createElement('li');\n\n        _li.textContent = message[_i];\n        ul.appendChild(_li);\n      }\n    }\n  };\n\n  var successResponse = function successResponse(response, form, message, type) {\n    if (response.status === 200) {\n      if (type == 'add') form[0].reset();\n      addMessage([message], 'success');\n      setTimeout(function () {\n        window.location.reload();\n      }, 1500);\n    }\n  };\n\n  var errorResponse = function errorResponse(error) {\n    var validationField = document.getElementById('validationField');\n\n    if (Object.keys(error.response.data.errors).length > 0) {\n      var errors = Object.values(error.response.data.errors);\n      addMessage(errors, 'error');\n    }\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/admin/employee.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/admin/employee.js"]();
/******/ 	
/******/ })()
;